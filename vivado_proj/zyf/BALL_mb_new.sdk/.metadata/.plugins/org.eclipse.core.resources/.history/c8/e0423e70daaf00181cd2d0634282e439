/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

//#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xgpio.h"
#include "xtmrctr.h"
#include "xintc.h"
#include "xil_exception.h"
#include "ball_locator.h"
#include "kalman.h"
#include "sleep.h"

#define GPio_LEDs_ID 	XPAR_AXI_GPIO_0_DEVICE_ID
#define GPio_BTNs_ID 	XPAR_AXI_GPIO_1_DEVICE_ID
#define INTC_ID 		XPAR_INTC_0_DEVICE_ID
#define TMRCTR_ID 		XPAR_TMRCTR_0_DEVICE_ID
#define LEDs_CHANNEL 	1
#define BTNs_CHANNEL 	1

XGpio Gpio_leds;
XGpio Gpio_btns;
XTmrCtr TmrCtr;
XIntc Intc;
XBall Ball;
Kalman Kalman_x;
Kalman Kalman_y;

int main()
{
	u32 leds;
	u32 btns;

	u32 coordx;
	u32 coordy;

	u32 kalman_coordx;
	u32 kalman_coordy;

	int Status;
	XGpio_Config *GPIOConfigPtr;
	XBall_Config *BallConfigPtr;
	XTmrCtr_Config *TmrConfigPtr;

    init_platform();

    xil_printf("Hello World\n\r");

    //初始化leds and btns
    GPIOConfigPtr = XGpio_LookupConfig(GPio_LEDs_ID);
    Status = XGpio_CfgInitialize(&Gpio_leds, GPIOConfigPtr, GPIOConfigPtr->BaseAddress);
    if(Status != XST_SUCCESS){
    	print("XST_FAILURE");
    	return XST_FAILURE;
    }
    XGpio_SetDataDirection(&Gpio_leds, LEDs_CHANNEL, 0x0000);

    GPIOConfigPtr = XGpio_LookupConfig(GPio_BTNs_ID);
    Status = XGpio_CfgInitialize(&Gpio_btns, GPIOConfigPtr, GPIOConfigPtr->BaseAddress);
    if(Status != XST_SUCCESS){
    	print("XST_FAILURE");
    	return XST_FAILURE;
    }
    XGpio_SetDataDirection(&Gpio_btns, BTNs_CHANNEL, 0xffff);

    //初始化camera模块
    BallConfigPtr = XBall_LookupConfig(XPAR_BALL_LOCATOR_0_DEVICE_ID);
    XBall_CfgInitialize(&Ball, BallConfigPtr, BallConfigPtr->BaseAddress);

    //设置阈值
    XBall_WriteThreshold(&Ball, 0x28);

    //初始化timer


    while(1){
    	XBall_ReadCoords(&Ball, &coordx, &coordy);
    	kalman_coordx = KalmanFilter(&Kalman_x, (double)coordx);
    	kalman_coordy = KalmanFilter(&Kalman_y, (double)coordy);
    	xil_printf("coordx = %d, coordy = %d, kalman_coordx = %d, kalman_coordy = %d\r\n", coordx, coordy, kalman_coordx, kalman_coordy);
    	sleep(1);
    }


    cleanup_platform();
    return 0;
}
